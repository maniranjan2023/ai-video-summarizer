# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fydVKVo0E71n-2uFTr6p4sFCLXwYCaqF
"""


import streamlit as st
import google.generativeai as genai
from youtube_transcript_api import YouTubeTranscriptApi
genai.configure(api_key="AIzaSyB4Nc3U1mwCuAL_eUtOS2NgmCRZud32WVo")
prompt="""you are youtube video summariser. you will be taking the trnascript text and sumarizing and enire video and providign the importnat summary in points within 500 word. please provide the summay of text given here: """

# Getting the transcript from youtube video
def extract_transcript_details(youtube_video_url):
    try:
        video_id= youtube_video_url.split("=")[1];
        transcript_text=YouTubeTranscriptApi.get_transcript(video_id);

        transcript=""
        for i in transcript_text:
            transcript+=" " + i["text"]

        return transcript;

    except Exception as e:
        raise e;

# Getting the summary based on prompt from google gemini

def generate_gemini_content(transcript_text,prompt):
    model=genai.GenerativeModel("gemini-pro")
    response = model.generate_content(prompt + transcript_text);
    return response.text;


st.title("youtube transcript to detailed notes convertor")
youtube_link=st.text_input("enter youtube video link:")


from urllib.parse import urlparse, parse_qs, urlencode


def clean_youtube_url(url):
    parsed_url = urlparse(url)
    if "youtube.com" in parsed_url.netloc and "v" in parse_qs(parsed_url.query):
        # Extract the base URL and video ID
        video_id = parse_qs(parsed_url.query)["v"][0]
        clean_url = f"https://www.youtube.com/watch?v={video_id}"
        return clean_url
    else:
        return "Invalid YouTube URL"


if(youtube_link):
    video_id=youtube_link.split("=")[1];
    st.image(f"http://img.youtube.com/vi/{video_id}/0.jpg",use_column_width=True);

if st.button("Get Detailed Notes"):
    clean_url=clean_youtube_url(youtube_link);
    transcript_text=extract_transcript_details(clean_url);
    if transcript_text:
         summary= generate_gemini_content(transcript_text,prompt);
         st.markdown("## Detailed Summary of above Utube Video")
         st.write(summary)
